{"version":3,"file":"static/js/148.e10d5f30.chunk.js","mappings":"4LACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA4I,0B,SCQ5I,EAPgB,SAACA,GAEb,OACI,gBAAKC,UAAWC,EAAhB,SAA4BF,EAAMG,SAEzC,E,UCMD,EAVmB,SAACH,GAChB,IAAII,EAAO,YAAcJ,EAAMK,GAE/B,OACI,gBAAKJ,UAAS,UAAKC,EAAL,YAAuBA,GAArC,UACI,SAAC,KAAD,CAASI,GAAIF,EAAb,SAAoBJ,EAAMO,QAGrC,E,uCCDD,EARyBC,EAAAA,KAAaC,MAAM,CACxCC,eAAgBF,EAAAA,KAEXG,IAAI,EAAG,oCAEPC,IAAI,GAAI,wBACRC,SAAS,uBC+BZC,EAAoB,SAACd,GACvB,OACI,SAAC,KAAD,CACIe,cAAe,CAAC,EAChBC,SAAUhB,EAAMiB,cAChBC,iBAAkBC,EAHtB,SAKK,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAAV,OACG,UAAC,KAAD,YACI,0BACI,SAAC,KAAD,CAAOC,KAAM,WAAYf,KAAM,iBAAkBgB,YAAa,8BAEjEH,EAAOV,gBAAkBW,EAAQX,iBAC9B,iBAAMc,MAAO,CAACC,MAAO,MAAOC,SAAU,OAAQC,OAAQ,iBAAtD,SAAyEP,EAAOV,kBACpF,0BACI,mBAAQY,KAAM,SAAd,sBARX,GAcZ,EAED,EArDgB,SAACtB,GAEb,IAAI4B,EAAQ5B,EAAM6B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OAAO,SAAC,EAAD,CAAY1B,KAAM0B,EAAE1B,MAAY0B,EAAE5B,GAAzC,IACpC6B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASjC,QAASiC,EAAEjC,SAAciC,EAAE/B,GAAxC,IAM3C,OAAKL,EAAMqC,QAGP,iBAAKpC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACK4B,KAEL,iBAAK7B,UAAWC,EAAhB,WACI,yBAAMgC,KACN,0BACI,SAACpB,EAAD,CAAmBG,cAdf,SAACqB,GACjBtC,EAAMuC,YAAYD,EAAO5B,eAC5B,aAEyB,SAAC,KAAD,CAAUJ,GAAI,UAiB3C,E,oBCpBD,GAAekC,E,QAAAA,KACXC,EAAAA,EAAAA,KAZkB,SAACb,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE1B,IACwB,SAACa,GACtB,MAAO,CACHH,YAAa,SAAC7B,GAAoBgC,GAASC,EAAAA,EAAAA,GAAmBjC,GAAiB,EAEtF,IAIGkC,EAAAA,EAFJ,CAGEC,E,mJChBEC,EAA6B,SAAClB,GAAD,MAAY,CACzCS,OAAQT,EAAMmB,KAAKV,OADU,EAIpBO,EAAmB,SAACI,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAAKC,KAAKlD,MAAMqC,QACT,SAACW,GAAD,UAAeE,KAAKlD,SADI,SAAC,KAAD,CAAUM,GAAI,UAEhD,KANsC,GAEX6C,EAAAA,WAShC,OAFqCV,EAAAA,EAAAA,IAAQK,EAARL,CAAoCQ,EAG5E,C","sources":["webpack://react-way-of-samurai/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/FormValidation/dialogFormSchema.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__lgABt\",\"dialogsItems\":\"Dialogs_dialogsItems__uVcGp\",\"active\":\"Dialogs_active__jYZNB\",\"messages\":\"Dialogs_messages__dvpTA\",\"message\":\"Dialogs_message__gzde2\"};","import s from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        <div className={s.dialogs}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={`${s.dialogsItems} ${s.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import * as Yup from \"yup\";\r\n\r\nconst dialogFormSchema = Yup.object().shape({\r\n    newMessageBody: Yup.string()\r\n        //минимальная длина - 2 символа\r\n        .min(2, 'Must be longer than 2 characters')\r\n        //максимальная длина - 20 символов\r\n        .max(50, 'More than 50 symbols')\r\n        .required('Field is Required'),\r\n});\r\nexport default dialogFormSchema;","import s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport dialogFormSchema from \"../FormValidation/dialogFormSchema\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map((d) => <DialogItem name={d.name}  key={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <AddNewMessageForm addNewMessage={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nconst AddNewMessageForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{}}\r\n            onSubmit={props.addNewMessage}\r\n            validationSchema={dialogFormSchema}\r\n        >\r\n            {({errors, touched}) => (\r\n                <Form>\r\n                    <div>\r\n                        <Field type={'textarea'} name={'newMessageBody'} placeholder={'Enter your message body'}/>\r\n                    </div>\r\n                    {errors.newMessageBody && touched.newMessageBody &&\r\n                        <span style={{color: 'red', fontSize: '18px', border: '1px solid red'}}>{errors.newMessageBody}</span>}\r\n                    <div>\r\n                        <button type={'submit'}>Send</button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {dispatch(sendMessageCreator(newMessageBody))}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","className","s","message","path","id","to","name","Yup","shape","newMessageBody","min","max","required","AddNewMessageForm","initialValues","onSubmit","addNewMessage","validationSchema","dialogFormSchema","errors","touched","type","placeholder","style","color","fontSize","border","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}